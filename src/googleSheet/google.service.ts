import { Injectable } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { GoogleSpreadsheet, GoogleSpreadsheetWorksheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';
import { Config, SheetData } from './google.model';

@Injectable()
export class GoogleService {
  
  private doc: GoogleSpreadsheet;
  private sheet: GoogleSpreadsheetWorksheet;
  
  constructor(private configService: ConfigService<Config>) {

    // Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
    const serviceAccountAuth = new JWT({
      // env var values here are copied from service account credentials generated by google
      // see "Authentication" section in docs for more info
      email: configService.get<string>('GOOGLE_SERVICE_ACCOUNT_EMAIL'),
      key: configService.get<string>('GOOGLE_PRIVATE_KEY').replace(/\\n/g, '\n'),
      scopes: [
        'https://www.googleapis.com/auth/spreadsheets',
      ],
    });

    this.doc = new GoogleSpreadsheet(configService.get<string>('GOOGLE_SPREADSHEET_ID'), serviceAccountAuth);

    this._loadDocs();
  }
  private async _loadDocs () {
    await this.doc.loadInfo();
    this.sheet = this.doc.sheetsById[this.configService.get<string>('GOOGLE_SHEET_ID')];    
    await this.sheet.loadHeaderRow(3);
  }

  public async addData (sheetData: SheetData ){
    await this.sheet.addRow({...sheetData});
  }
}
